for(i in 1:length(table(est_clust))){
seq <- c(seq,which(est_clust == as.numeric(names(sort(table(est_clust), decreasing = TRUE))[i])))
}
psm_matrix <- salso::psm(clean_partition(MCMC_chain))[seq,seq]
matrix_out <- reshape2::melt(psm_matrix[1:nrow(psm_matrix), , drop = FALSE])
plot_heat <- ggplot(matrix_out) +
geom_tile(aes(x = Var2, y = Var1, fill = value), na.rm = TRUE, size = 0.0,show.legend = FALSE) +
scale_fill_gradient(
low = "transparent",
high = "#F8766D"
) +
labs(x = "", y = "", fill = "") +
theme_linedraw() +
coord_cartesian(xlim = c(0, ncol(psm_matrix) + 1), ylim = c(0, ncol(psm_matrix) + 1), expand = FALSE) +
scale_x_continuous(breaks = seq(1, ncol(psm_matrix), by = 1), labels = seq) +
scale_y_continuous(breaks = seq(1, ncol(psm_matrix), by = 1),labels = seq) +
theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
axis.text.y = element_text(size = 8),
panel.grid.major = element_blank(),
panel.grid.minor = element_line(size=0.1))
plot_heat
load("G:\\Il mio Drive\\Dottorato\\Progetti\\Model Based Clustering of TS\\stock_data_results\\res_14012024.Rdata")
MCMC_chain <- out$clust[3000:13000,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
library(BNPmix)
load("G:\\Il mio Drive\\Dottorato\\Progetti\\Model Based Clustering of TS\\stock_data_results\\res_14012024.Rdata")
MCMC_chain <- out$clust[3000:13000,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
library(BNPmix)
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
est_clust
MCMC_chain <- out$clust[2500:12500,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
est_clust
MCMC_chain <- out$clust[5000:15000,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
est_clust
MCMC_chain <- out$clust[5000:20000,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
est_clust
load("G:\\Il mio Drive\\Dottorato\\Progetti\\Model Based Clustering of TS\\stock_data_results\\res_14012024.Rdata")
MCMC_chain <- out$clust[3000:13000,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
est_clust
seq <- as.numeric()
for(i in 1:length(table(est_clust))){
seq <- c(seq,which(est_clust == as.numeric(names(sort(table(est_clust), decreasing = TRUE))[i])))
}
psm_matrix <- salso::psm(clean_partition(MCMC_chain))[seq,seq]
matrix_out <- reshape2::melt(psm_matrix[1:nrow(psm_matrix), , drop = FALSE])
plot_heat <- ggplot(matrix_out) +
geom_tile(aes(x = Var2, y = Var1, fill = value), na.rm = TRUE, size = 0.0,show.legend = FALSE) +
scale_fill_gradient(
low = "transparent",
high = "black"
) +
labs(x = "", y = "", fill = "") +
theme_linedraw() +
coord_cartesian(xlim = c(0, ncol(psm_matrix) + 1), ylim = c(0, ncol(psm_matrix) + 1), expand = FALSE) +
scale_x_continuous(breaks = seq(1, ncol(psm_matrix), by = 1), labels = seq) +
scale_y_continuous(breaks = seq(1, ncol(psm_matrix), by = 1),labels = seq) +
theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
axis.text.y = element_text(size = 8),
panel.grid.major = element_blank(),
panel.grid.minor = element_line(size=0.1))
plot_heat
library(ggplot2)
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
seq <- as.numeric()
for(i in 1:length(table(est_clust))){
seq <- c(seq,which(est_clust == as.numeric(names(sort(table(est_clust), decreasing = TRUE))[i])))
}
psm_matrix <- salso::psm(clean_partition(MCMC_chain))[seq,seq]
matrix_out <- reshape2::melt(psm_matrix[1:nrow(psm_matrix), , drop = FALSE])
plot_heat <- ggplot(matrix_out) +
geom_tile(aes(x = Var2, y = Var1, fill = value), na.rm = TRUE, size = 0.0,show.legend = FALSE) +
scale_fill_gradient(
low = "transparent",
high = "black"
) +
labs(x = "", y = "", fill = "") +
theme_linedraw() +
coord_cartesian(xlim = c(0, ncol(psm_matrix) + 1), ylim = c(0, ncol(psm_matrix) + 1), expand = FALSE) +
scale_x_continuous(breaks = seq(1, ncol(psm_matrix), by = 1), labels = seq) +
scale_y_continuous(breaks = seq(1, ncol(psm_matrix), by = 1),labels = seq) +
theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
axis.text.y = element_text(size = 8),
panel.grid.major = element_blank(),
panel.grid.minor = element_line(size=0.1))
plot_heat
est_clust
MCMC_chain <- out$clust[10000:20000,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
est_clust
MCMC_chain
MCMC_chain <- out$clust[3000:3001,]
MCMC_chain
MCMC_chain <- out$clust[3100:3101,]
out$clust
MCMC_chain <- out$clust#[3100:3101,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
est_clust
MCMC_chain <- out$clust[3000:10000,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
est_clust
MCMC_chain <- out$clust[3000:13000,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl
set.seed(123)
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(123)
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(roun(rnorm(1,mean = 1000, sd = 1000 )))
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
set.seed(round(rnorm(1,mean = 1000, sd = 1000 )))
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
salso::psm(clean_partition(MCMC_chain))
library(BNPmix)
load("G:\\Il mio Drive\\Dottorato\\Progetti\\Model Based Clustering of TS\\stock_data_results\\res_14012024.Rdata")
MCMC_chain <- out$clust[3000:13000,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
devtools::load_all(".")
MCMC_chain <- out$clust[3000:13000,]
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
get_clust_VI(MCMC_chain)
MCMC_chain <- out$clust[1000:3000,]
get_clust_VI(MCMC_chain)
MCMC_chain <- out$clust[3000:5000,]
get_clust_VI(MCMC_chain)
MCMC_chain <- out$clust[3000:10000,]
get_clust_VI(MCMC_chain)
est_clust <- mcclust.ext::minbinder.ext(psm = salso::psm(clean_partition(MCMC_chain)))$cl;est_clust
source("~/.active-rstudio-document")
devtools::load_all(".")
devtools::load_all(".")
library(dplyr)
library(ggplot2)
library(BayesCPs)
library(BNPmix)
First_Day <- "2020-01-01"
Last_Day <- "2022-01-01"
data <- array(NA, c(3,505,50))
companies <- c("MSFT","AAPL","AMZN","NVDA","GOOGL","GOOG","BRK-B","UNH","LLY",
"JPM","XOM","AVGO","V","JNJ","PG","MA","HD","ADBE","COST","CVX","MRK","PEP","KO",
"WMT","CRM","NFLX","ACN","MCD","BAC","LIN","AMD","CSCO","TMO","INTC","ORCL","ABT",
"CMCSA","DIS","PFE","WFC","INTU","VZ","PM","DHR","AMGN","IBM","QCOM","TXN","COP","UNP")
DATA
for(i in 1:50){
DATA <- read.csv(paste0("G:/My Drive/Dottorato/Progetti/Model Based Clustering of TS/Backup project/Model-Based-Clustering-of-Time-Series/stock_data/",companies[i],".csv"), header = TRUE)
DATA <- DATA %>%
mutate(Mean = (High + Low)/2) %>%
mutate(Date = as.Date(Date)) %>%
dplyr::select(Date, Open, Mean, Close)
DATA <- DATA[which(DATA$Date >= First_Day & DATA$Date < Last_Day),]
data[,,i] <- t(scale(DATA[,c(2,3,4)]))
}
DATA <- read.csv(paste0("H:/Il Mio Drive/Dottorato/Progetti/Model Based Clustering of TS/Backup project/Model-Based-Clustering-of-Time-Series/stock_data/",companies[i],".csv"), header = TRUE)
DATA <- read.csv(paste0("G:/Il Mio Drive/Dottorato/Progetti/Model Based Clustering of TS/Backup project/Model-Based-Clustering-of-Time-Series/stock_data/",companies[i],".csv"), header = TRUE)
DATA <- DATA %>%
mutate(Mean = (High + Low)/2) %>%
mutate(Date = as.Date(Date)) %>%
dplyr::select(Date, Open, Mean, Close)
DATA
scale(DATA[,3])
data_mat <- matrix(NA,nrow = 50, ncol = 505)
for(i in 1:50){
DATA <- read.csv(paste0("G:/Il Mio Drive/Dottorato/Progetti/Model Based Clustering of TS/Backup project/Model-Based-Clustering-of-Time-Series/stock_data/",companies[i],".csv"), header = TRUE)
DATA <- DATA %>%
mutate(Mean = (High + Low)/2) %>%
mutate(Date = as.Date(Date)) %>%
dplyr::select(Date, Open, Mean, Close)
DATA <- DATA[which(DATA$Date >= First_Day & DATA$Date < Last_Day),]
data_mat[i,] <- scale(DATA[,3])
#data[,,i] <- t(scale(DATA[,c(2,3,4)]))
}
data_mat
plot(data_mat[1,])
plot(data_mat[1,], type = "l")
lines(data_mat[2,], type = "l")
plot(data_mat[1,], type = "l")
for(i in 2:50){
lines(data_mat[i,], type = "l")
}
for(i in 1:50){
DATA <- read.csv(paste0("G:/Il Mio Drive/Dottorato/Progetti/Model Based Clustering of TS/Backup project/Model-Based-Clustering-of-Time-Series/stock_data/",companies[i],".csv"), header = TRUE)
DATA <- DATA %>%
mutate(Mean = (High + Low)/2) %>%
mutate(Date = as.Date(Date)) %>%
dplyr::select(Date, Open, Mean, Close)
DATA <- DATA[which(DATA$Date >= First_Day & DATA$Date < Last_Day),]
data_mat[i,] <- scale(DATA[,3], center = T)
#data[,,i] <- t(scale(DATA[,c(2,3,4)]))
}
plot(data_mat[1,], type = "l")
for(i in 2:50){
lines(data_mat[i,], type = "l")
}
for(i in 1:50){
DATA <- read.csv(paste0("G:/Il Mio Drive/Dottorato/Progetti/Model Based Clustering of TS/Backup project/Model-Based-Clustering-of-Time-Series/stock_data/",companies[i],".csv"), header = TRUE)
DATA <- DATA %>%
mutate(Mean = (High + Low)/2) %>%
mutate(Date = as.Date(Date)) %>%
dplyr::select(Date, Open, Mean, Close)
DATA <- DATA[which(DATA$Date >= First_Day & DATA$Date < Last_Day),]
data_mat[i,] <- scale(DATA[,3], center = F)
#data[,,i] <- t(scale(DATA[,c(2,3,4)]))
}
plot(data_mat[1,], type = "l")
for(i in 2:50){
lines(data_mat[i,], type = "l")
}
for(i in 1:50){
DATA <- read.csv(paste0("G:/Il Mio Drive/Dottorato/Progetti/Model Based Clustering of TS/Backup project/Model-Based-Clustering-of-Time-Series/stock_data/",companies[i],".csv"), header = TRUE)
DATA <- DATA %>%
mutate(Mean = (High + Low)/2) %>%
mutate(Date = as.Date(Date)) %>%
dplyr::select(Date, Open, Mean, Close)
DATA <- DATA[which(DATA$Date >= First_Day & DATA$Date < Last_Day),]
data_mat[i,] <- scale(DATA[,3], scale = F)
#data[,,i] <- t(scale(DATA[,c(2,3,4)]))
}
plot(data_mat[1,], type = "l")
for(i in 2:50){
lines(data_mat[i,], type = "l")
}
for(i in 1:50){
DATA <- read.csv(paste0("G:/Il Mio Drive/Dottorato/Progetti/Model Based Clustering of TS/Backup project/Model-Based-Clustering-of-Time-Series/stock_data/",companies[i],".csv"), header = TRUE)
DATA <- DATA %>%
mutate(Mean = (High + Low)/2) %>%
mutate(Date = as.Date(Date)) %>%
dplyr::select(Date, Open, Mean, Close)
DATA <- DATA[which(DATA$Date >= First_Day & DATA$Date < Last_Day),]
data_mat[i,] <- scale(DATA[,3])
#data[,,i] <- t(scale(DATA[,c(2,3,4)]))
}
plot(data_mat[1,], type = "l")
for(i in 2:50){
lines(data_mat[i,], type = "l")
}
out <- cluster_cp_uni(data = data_mat, n_iterations = 20000, B = 100000, L = 1, gamma = 0.50, alpha_SM = 0.5)
out <- cluster_cp_uni(data = data_mat, n_iterations = 20000, B = 100000,
L = 1, gamma = 0.50, alpha_SM = 0.5, print_progress = T)
out <- cluster_cp_uni(data = data_mat, n_iterations = 20000, B = 100,
L = 1, gamma = 0.50, alpha_SM = 0.5, print_progress = T)
data_mat
?cluster_cp_uni
out <- cluster_cp_uni(data = scale(data_mat), n_iterations = 20000, B = 100000,
L = 1, gamma = 0.50, alpha_SM = 0.5, print_progress = T)
out <- cluster_cp_uni(data = scale(data_mat), n_iterations = 200, B = 100,
L = 1, gamma = 0.50, alpha_SM = 0.5, print_progress = T)
out$clust
data_mat
out <- cluster_cp_uni(data = data_mat, n_iterations = 20000, B = 100000,
L = 1, gamma = 0.50, alpha_SM = 0.5, print_progress = T)
devtools::load_all(".")
library(BayesCPs)
out <- cluster_cp_uni(data = data_mat, n_iterations = 20000, B = 100000,
L = 1, gamma = 0.50, alpha_SM = 0.5, print_progress = T)
data_mat <- matrix(NA, nrow = 5, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_mat[4,] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_mat[5,] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
out <- cluster_cp_uni(data = data_mat, n_iterations = 5000, B = 1000, L = 1, gamma = 0.5)
out <- cluster_cp_uni(data = t(data_mat), n_iterations = 5000, B = 1000, L = 1, gamma = 0.5)
devtools::load_all(".")
data_mat <- matrix(NA, nrow = 5, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_mat[4,] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_mat[5,] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
out <- cluster_cp_uni(data = data_mat, n_iterations = 5000, B = 1000, L = 1, gamma = 0.5)
get_clust_VI(out$clust[2500:5000,])
data_mat
First_Day <- "2020-01-01"
Last_Day <- "2022-01-01"
data <- array(NA, c(3,505,50))
data_mat <- matrix(NA,nrow = 50, ncol = 505)
companies <- c("MSFT","AAPL","AMZN","NVDA","GOOGL","GOOG","BRK-B","UNH","LLY",
"JPM","XOM","AVGO","V","JNJ","PG","MA","HD","ADBE","COST","CVX","MRK","PEP","KO",
"WMT","CRM","NFLX","ACN","MCD","BAC","LIN","AMD","CSCO","TMO","INTC","ORCL","ABT",
"CMCSA","DIS","PFE","WFC","INTU","VZ","PM","DHR","AMGN","IBM","QCOM","TXN","COP","UNP")
for(i in 1:50){
DATA <- read.csv(paste0("G:/Il Mio Drive/Dottorato/Progetti/Model Based Clustering of TS/Backup project/Model-Based-Clustering-of-Time-Series/stock_data/",companies[i],".csv"), header = TRUE)
DATA <- DATA %>%
mutate(Mean = (High + Low)/2) %>%
mutate(Date = as.Date(Date)) %>%
dplyr::select(Date, Open, Mean, Close)
DATA <- DATA[which(DATA$Date >= First_Day & DATA$Date < Last_Day),]
data_mat[i,] <- scale(DATA[,3])
#data[,,i] <- t(scale(DATA[,c(2,3,4)]))
}
data_mat
out <- cluster_cp_uni(data = data_mat, n_iterations = 5000, B = 1000, L = 1, gamma = 0.5)
devtools::load_all(".")
Likelihood_UniTS(data_mat[0,], order = c(rep(0,100),rep(1,405)))
Likelihood_UniTS(data_mat[0,], order = c(rep(0,100),rep(1,405)), gamma_par = 0.5)
Likelihood_UniTS(data_mat[0,], order = c(rep(0,100),rep(1,405)), gamma_par = 0.5, a = 1, b = 1, c = 0.1)
data_mat[0,]
Likelihood_UniTS(data_mat, order = c(rep(0,100),rep(1,405)), gamma_par = 0.5, a = 1, b = 1, c = 0.1)
data_mat
Likelihood_UniTS(as.matrix(data_mat), order = c(rep(0,100),rep(1,405)), gamma_par = 0.5, a = 1, b = 1, c = 0.1)
c(rep(0,100),rep(1,405))
Likelihood_UniTS(data = as.matrix(data_mat), order = c(rep(0,100),rep(1,405)), gamma_par = 0.5, a = 1, b = 1, c = 0.1)
Likelihood_UniTS(data = as.matrix(data_mat), order = as.matrix(c(rep(0,100),rep(1,405))), gamma_par = 0.5, a = 1, b = 1, c = 0.1)
Likelihood_UniTS(data = as.matrix(data_mat), order = t(as.matrix(c(rep(0,100),rep(1,405)))), gamma_par = 0.5, a = 1, b = 1, c = 0.1)
t(as.matrix(c(rep(0,100),rep(1,405))))
Likelihood_UniTS(data = data_mat, order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma_par = 0.5, a = 1, b = 1, c = 0.1)
Likelihood_MultiTS(data = data_mat, order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 4, phi_0 = diag(1,1,1), m_0 = 0)
data_mat
Likelihood_MultiTS(data = data_mat[1,], order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 4, phi_0 = diag(1,1,1), m_0 = 0)
data_mat[1,]
Likelihood_MultiTS(data = as.matrix(data_mat[1,]), order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 4, phi_0 = diag(1,1,1), m_0 = 0)
as.matrix(data_mat[1,])
Likelihood_MultiTS(data = t(as.matrix(data_mat[1,])), order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 4, phi_0 = diag(1,1,1), m_0 = 0)
Likelihood_UniTS(data = data_mat, order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma_par = 0.5, a = 1, b = 1, c = 0.1)
Likelihood_MultiTS(data = t(as.matrix(data_mat[1,])), order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 1, phi_0 = diag(1,1,1), m_0 = 0)
Likelihood_MultiTS(data = t(as.matrix(data_mat[1,])), order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 2, phi_0 = diag(1,1,1), m_0 = 0)
Likelihood_MultiTS(data = t(as.matrix(data_mat[1,])), order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 3, phi_0 = diag(1,1,1), m_0 = 0)
Likelihood_UniTS(data = data_mat, order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma_par = 0.5, a = 1, b = 1, c = 0.1)
Likelihood_MultiTS(data = t(as.matrix(data_mat[1,])), order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 4, phi_0 = diag(1,1,1), m_0 = 0)
Likelihood_UniTS(data = data_mat, order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma_par = 0.5, a = 1, b = 1, c = 0.1)
Likelihood_MultiTS(data = t(as.matrix(data_mat[1,])), order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 6, phi_0 = diag(1,1,1), m_0 = 0)
Likelihood_MultiTS(data = t(as.matrix(data_mat[1,])), order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 6, phi_0 = diag(0.1,1,1), m_0 = 0)
Likelihood_UniTS(data = data_mat, order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma_par = 0.5, a = 1, b = 1, c = 0.1)
data_mat
out <- cluster_cp_uni(data = data_mat, n_iterations = 20000, B = 100000,
L = 1, gamma = 0.50, alpha_SM = 0.5, print_progress = T)
library(dplyr)
library(ggplot2)
library(BayesCPs)
library(BNPmix)
First_Day <- "2020-01-01"
Last_Day <- "2022-01-01"
data <- array(NA, c(3,505,50))
data_mat <- matrix(NA,nrow = 50, ncol = 505)
companies <- c("MSFT","AAPL","AMZN","NVDA","GOOGL","GOOG","BRK-B","UNH","LLY",
"JPM","XOM","AVGO","V","JNJ","PG","MA","HD","ADBE","COST","CVX","MRK","PEP","KO",
"WMT","CRM","NFLX","ACN","MCD","BAC","LIN","AMD","CSCO","TMO","INTC","ORCL","ABT",
"CMCSA","DIS","PFE","WFC","INTU","VZ","PM","DHR","AMGN","IBM","QCOM","TXN","COP","UNP")
for(i in 1:50){
DATA <- read.csv(paste0("G:/Il Mio Drive/Dottorato/Progetti/Model Based Clustering of TS/Backup project/Model-Based-Clustering-of-Time-Series/stock_data/",companies[i],".csv"), header = TRUE)
DATA <- DATA %>%
mutate(Mean = (High + Low)/2) %>%
mutate(Date = as.Date(Date)) %>%
dplyr::select(Date, Open, Mean, Close)
DATA <- DATA[which(DATA$Date >= First_Day & DATA$Date < Last_Day),]
data_mat[i,] <- scale(DATA[,3])
data[,,i] <- t(scale(DATA[,c(2,3,4)]))
}
out <- cluster_cp_multi(data = data,
n_iterations = 20000, B = 100000, L = 1, gamma = 0.50,
q = 0.5, alpha_SM = 0.01, k_0 = 1,
nu_0 = 5, phi_0 = diag(0.01,3,3), m_0 = rep(0,3),
coars = 1, user_seed = 11062001)
t(scale(DATA[,c(2,3,4)]))
scale(DATA[,3])
?cluster_cp_multi
devtools::load_all(".")
norm_constant_uni(data = data_mat, gamma_par = 0.5, R = 10000, a = 1, b = 1, c = 0.1, p = 2/505, print_progress = TRUE)
norm_constant_uni(data = data_mat, gamma_par = 0.5, R = 100, a = 1, b = 1, c = 0.1, p = 2/505, print_progress = TRUE)
norm_constant_multi(data = data, gamma_par = 0.5, R = 100, k_0 = 0.5, nu_0 = 5, phi_0 = diag(0.1,1), m_0 = 0, p = 2/505, print_progress = TRUE)
norm_constant_multi(data = data, gamma_par = 0.5, R = 100, k_0 = 0.5, nu_0 = 5, phi_0 = diag(0.1,3,3), m_0 = rep(0,3), p = 2/505, print_progress = TRUE)
norm_constant_uni(data = data_mat, gamma_par = 0.5, R = 1000, a = 1, b = 1, c = 0.1, p = 2/505, print_progress = TRUE)
norm_constant_multi(data = data, gamma_par = 0.5, R = 1000, k_0 = 0.5, nu_0 = 5, phi_0 = diag(0.1,3,3), m_0 = rep(0,3), p = 2/505, print_progress = TRUE)
norm_constant_uni(data = data_mat, gamma_par = 0.5, R = 10000, a = 1, b = 1, c = 0.1, p = 2/505, print_progress = TRUE)
norm_constant_multi(data = data, gamma_par = 0.5, R = 10000, k_0 = 0.5, nu_0 = 5, phi_0 = diag(0.1,3,3), m_0 = rep(0,3), p = 2/505, print_progress = TRUE)
Likelihood_MultiTS(data = t(as.matrix(data_mat[1,])), order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 6, phi_0 = diag(0.1,1,1), m_0 = 0)
devtools::load_all(".")
Likelihood_MultiTS(data = t(as.matrix(data_mat[1,])), order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 6, phi_0 = diag(0.1,1,1), m_0 = 0)
Likelihood_MultiTS(data = data[,,1], order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 6, phi_0 = diag(0.1,1,1), m_0 = 0)
Likelihood_MultiTS(data = data[1,,1], order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 6, phi_0 = diag(0.1,1,1), m_0 = 0)
data[,,1]
Likelihood_MultiTS(data = data[,,1], order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 6, phi_0 = diag(0.1,1,1), m_0 = 0)
Likelihood_MultiTS(data = data[1,,1], order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 6, phi_0 = diag(0.1,1,1), m_0 = 0)
khik
Likelihood_MultiTS(data = data[,,1], order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 6, phi_0 = diag(0.1,1,1), m_0 = 0)
norm_constant_uni(data = data_mat, gamma_par = 0.5, R = 10000, a = 1, b = 1, c = 0.1, p = 2/505, print_progress = TRUE)
Likelihood_MultiTS(data = data[,,1], order = t(as.matrix(c(rep(0,100),rep(1,405)))), gamma = 0.5, k_0 = 1, nu_0 = 6, phi_0 = diag(0.1,1,1), m_0 = 0)
Likelihood_MultiTS(data = data[,,1], order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 1, nu_0 = 6, phi_0 = diag(0.1,3,3), m_0 = rep(0,3))
Likelihood_MultiTS(data = data[,,1], order = t(as.matrix(c(rep(0,100),rep(1,405)))),
gamma = 0.5, k_0 = 0.5, nu_0 = 5, phi_0 = diag(0.1,3,3), m_0 = rep(0,3))
norm_constant_multi(data = data, gamma_par = 0.5, R = 100000,
k_0 = 0.5, nu_0 = 5, phi_0 = diag(0.1,3,3), m_0 = rep(0,3), p = 2/505, print_progress = TRUE)
library(dplyr)
library(ggplot2)
library(BayesCPs)
library(BNPmix)
First_Day <- "2020-01-01"
Last_Day <- "2022-01-01"
data <- array(NA, c(3,505,50))
data_mat <- matrix(NA,nrow = 50, ncol = 505)
companies <- c("MSFT","AAPL","AMZN","NVDA","GOOGL","GOOG","BRK-B","UNH","LLY",
"JPM","XOM","AVGO","V","JNJ","PG","MA","HD","ADBE","COST","CVX","MRK","PEP","KO",
"WMT","CRM","NFLX","ACN","MCD","BAC","LIN","AMD","CSCO","TMO","INTC","ORCL","ABT",
"CMCSA","DIS","PFE","WFC","INTU","VZ","PM","DHR","AMGN","IBM","QCOM","TXN","COP","UNP")
for(i in 1:50){
DATA <- read.csv(paste0("G:/Il Mio Drive/Dottorato/Progetti/Model Based Clustering of TS/Backup project/Model-Based-Clustering-of-Time-Series/stock_data/",companies[i],".csv"), header = TRUE)
DATA <- DATA %>%
mutate(Mean = (High + Low)/2) %>%
mutate(Date = as.Date(Date)) %>%
dplyr::select(Date, Open, Mean, Close)
DATA <- DATA[which(DATA$Date >= First_Day & DATA$Date < Last_Day),]
data_mat[i,] <- scale(DATA[,3])
data[,,i] <- t(scale(DATA[,c(2,3,4)]))
}
out <- cluster_cp_multi(data = data,
n_iterations = 20000, B = 100000, L = 1, gamma = 0.50,
q = 0.5, alpha_SM = 0.01, k_0 = 1,
nu_0 = 5, phi_0 = diag(0.01,3,3), m_0 = rep(0,3),
coars = 1, user_seed = 11062001)
data
out <- cluster_cp_multi(data = data,
n_iterations = 20000, B = 100000, L = 1, gamma = 0.50,
q = 0.5, alpha_SM = 0.01, k_0 = 1,
nu_0 = 5, phi_0 = diag(0.01,3,3), m_0 = rep(0,3),
coars = 1, user_seed = 11062001)
devtools::load_all(".")
out <- cluster_cp_multi(data = data,
n_iterations = 20000, B = 100000, L = 1, gamma = 0.50,
q = 0.5, alpha_SM = 0.01, k_0 = 1,
nu_0 = 5, phi_0 = diag(0.01,3,3), m_0 = rep(0,3),
coars = 1, user_seed = 11062001)
data_array <- array(data = NA, dim = c(3,100,5))
data_array[1,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[2,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[3,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[1,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[2,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[3,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[1,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[2,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[3,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[1,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[2,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[3,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[1,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
data_array[2,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
data_array[3,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
out <- cluster_cp_multi(data = data_array, n_iterations = 5000, B = 1000, L = 1,
gamma = 0.1, k_0 = 0.25, nu_0 = 5, phi_0 = diag(0.1,3,3), m_0 = rep(0,3))
get_clust_VI(out$clust[2500:5000,])
devtools::load_all(".")
data_array <- array(data = NA, dim = c(3,100,5))
data_array[1,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[2,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[3,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[1,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[2,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[3,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[1,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[2,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[3,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[1,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[2,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[3,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[1,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
data_array[2,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
data_array[3,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
out <- cluster_cp_multi(data = data_array, n_iterations = 5000, B = 1000, L = 1,
gamma = 0.1, k_0 = 0.25, nu_0 = 5, phi_0 = diag(0.1,3,3), m_0 = rep(0,3))
